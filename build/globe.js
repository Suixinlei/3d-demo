/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/build/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/globe/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/_uuid@3.3.2@uuid/lib/bytesToUuid.js":
/*!**********************************************************!*\
  !*** ./node_modules/_uuid@3.3.2@uuid/lib/bytesToUuid.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nmodule.exports = bytesToUuid;\n\n//# sourceURL=webpack:///./node_modules/_uuid@3.3.2@uuid/lib/bytesToUuid.js?");

/***/ }),

/***/ "./node_modules/_uuid@3.3.2@uuid/lib/rng-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/_uuid@3.3.2@uuid/lib/rng-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/_uuid@3.3.2@uuid/lib/rng-browser.js?");

/***/ }),

/***/ "./node_modules/_uuid@3.3.2@uuid/v1.js":
/*!*********************************************!*\
  !*** ./node_modules/_uuid@3.3.2@uuid/v1.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/_uuid@3.3.2@uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/_uuid@3.3.2@uuid/lib/bytesToUuid.js\");\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n//# sourceURL=webpack:///./node_modules/_uuid@3.3.2@uuid/v1.js?");

/***/ }),

/***/ "./src/globe/earth.ts":
/*!****************************!*\
  !*** ./src/globe/earth.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BABYLON = __webpack_require__(/*! babylonjs */ \"babylonjs\");\nvar worldAxis_1 = __webpack_require__(/*! ./utils/worldAxis */ \"./src/globe/utils/worldAxis.js\");\nvar addPoint = __webpack_require__(/*! ./utils/addPoint */ \"./src/globe/utils/addPoint.js\");\nvar Earth = (function () {\n    function Earth(canvasElement) {\n        this._canvas = document.getElementById(canvasElement);\n        this._engine = new BABYLON.Engine(this._canvas, true);\n    }\n    Earth.prototype.createScene = function () {\n        this._scene = new BABYLON.Scene(this._engine);\n        this._scene.clearColor = new BABYLON.Color4(1, 1, 1, 1);\n        this._camera = new BABYLON.ArcRotateCamera('camera1', Math.PI, 0, 250, BABYLON.Vector3.Zero(), this._scene);\n        this._camera.lowerBetaLimit = 0.1;\n        this._camera.upperBetaLimit = Math.PI;\n        this._camera.setPosition(new BABYLON.Vector3(-300, 0, 0));\n        this._camera.attachControl(this._canvas, false);\n        this._camera.useAutoRotationBehavior = true;\n        this._camera.autoRotationBehavior.idleRotationSpeed = 0.10;\n        this._light = new BABYLON.HemisphericLight('light', this._camera.position, this._scene);\n        this._light.specular = new BABYLON.Color3(0, 0, 0);\n        this.earth = BABYLON.MeshBuilder.CreateSphere('earth', { segments: 32, diameter: 256 }, this._scene);\n        this.earth.rotation = new BABYLON.Vector3(Math.PI, Math.PI / 2, 0);\n        var earthMaterial = new BABYLON.StandardMaterial('earth', this._scene);\n        earthMaterial.ambientTexture = new BABYLON.Texture('/public/textures/globe_4096.png', this._scene);\n        this.earth.material = earthMaterial;\n        var manager = new BABYLON.GUI.GUI3DManager(this._scene);\n        var hzPoint = addPoint('杭州', this._scene, manager);\n        var shPoint = addPoint('上海', this._scene, manager);\n        var bjPoint = addPoint('北京', this._scene, manager);\n        var szPoint = addPoint('深圳', this._scene, manager);\n        worldAxis_1.default(this._scene, 512);\n    };\n    Earth.prototype.doRender = function () {\n        var _this = this;\n        this._scene.registerAfterRender(function () {\n        });\n        this._engine.runRenderLoop(function () {\n            _this._scene.render();\n        });\n        window.addEventListener('resize', function () {\n            _this._engine.resize();\n        });\n    };\n    return Earth;\n}());\nexports.default = Earth;\n\n\n//# sourceURL=webpack:///./src/globe/earth.ts?");

/***/ }),

/***/ "./src/globe/index.css":
/*!*****************************!*\
  !*** ./src/globe/index.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/globe/index.css?");

/***/ }),

/***/ "./src/globe/index.ts":
/*!****************************!*\
  !*** ./src/globe/index.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar earth_1 = __webpack_require__(/*! ./earth */ \"./src/globe/earth.ts\");\n__webpack_require__(/*! ./index.css */ \"./src/globe/index.css\");\nwindow.addEventListener('DOMContentLoaded', function () {\n    var earth = new earth_1.default('renderCanvas');\n    earth.createScene();\n    earth.doRender();\n});\n\n\n//# sourceURL=webpack:///./src/globe/index.ts?");

/***/ }),

/***/ "./src/globe/utils/addPoint.js":
/*!*************************************!*\
  !*** ./src/globe/utils/addPoint.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _babylonjs = __webpack_require__(/*! babylonjs */ \"babylonjs\");\n\nvar BABYLON = _interopRequireWildcard(_babylonjs);\n\nvar _v = __webpack_require__(/*! uuid/v1 */ \"./node_modules/_uuid@3.3.2@uuid/v1.js\");\n\nvar _v2 = _interopRequireDefault(_v);\n\nvar _convertLngLat = __webpack_require__(/*! ./convertLngLat */ \"./src/globe/utils/convertLngLat.js\");\n\nvar _convertLngLat2 = _interopRequireDefault(_convertLngLat);\n\nvar _geo = __webpack_require__(/*! ./geo */ \"./src/globe/utils/geo.js\");\n\nvar geoData = _interopRequireWildcard(_geo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar radius = 128;\nmodule.exports = function (name, scene, manager) {\n  var uuidNow = (0, _v2.default)();\n  var vector = (0, _convertLngLat2.default)(geoData[name], radius);\n  var vector3LookAt = (0, _convertLngLat2.default)(geoData[name], radius + 20);\n  var mesh = BABYLON.Mesh.CreateSphere(name, 16, 2, scene);\n  mesh.material = new BABYLON.StandardMaterial(name, scene);\n  mesh.material.diffuseColor = new BABYLON.Color3(1, 0, 1);\n  mesh.lookAt(vector3LookAt);\n\n  var point = new BABYLON.GUI.MeshButton3D(mesh, 'click ' + name);\n  manager.addControl(point);\n  point.position = vector;\n\n  point.onPointerEnterObservable.add(function () {\n    mesh.material.diffuseColor = new BABYLON.Color3(1, 0, 0);\n  });\n  point.onPointerOutObservable.add(function () {\n    mesh.material.diffuseColor = new BABYLON.Color3(1, 1, 1);\n  });\n  point.onPointerUpObservable.add(function () {\n    window.location.href = '/idc?name=' + name;\n  });\n\n  return point;\n};\n\n//# sourceURL=webpack:///./src/globe/utils/addPoint.js?");

/***/ }),

/***/ "./src/globe/utils/convertLngLat.js":
/*!******************************************!*\
  !*** ./src/globe/utils/convertLngLat.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _babylonjs = __webpack_require__(/*! babylonjs */ \"babylonjs\");\n\nvar BABYLON = _interopRequireWildcard(_babylonjs);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nmodule.exports = function (dot, radius) {\n  var lng = dot.lng;\n  var lat = dot.lat;\n\n  var aobDeg = lng * Math.PI / 180;\n  var dobDeg = lat * Math.PI / 180;\n  var ob = radius * Math.cos(dobDeg);\n  var oc = ob * Math.sin(aobDeg);\n  var oe = radius * Math.sin(dobDeg);\n  var oa = ob * Math.cos(aobDeg);\n\n  return new BABYLON.Vector3(-oc, oe, oa);\n};\n\n//# sourceURL=webpack:///./src/globe/utils/convertLngLat.js?");

/***/ }),

/***/ "./src/globe/utils/geo.js":
/*!********************************!*\
  !*** ./src/globe/utils/geo.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n  Moscow: {\n    lat: '55.7494733',\n    lng: '37.3523218',\n    fullName: '莫斯科'\n  },\n  Petersburg: {\n    lat: '59.9171483',\n    lng: '30.0448871',\n    fullName: '圣彼得堡'\n  },\n  Vladivostok: {\n    lat: '43.1736206',\n    lng: '131.895754',\n    fullName: '符拉迪沃斯托克(海参崴)'\n  },\n  Yekaterinburg: {\n    lat: '56.8138126',\n    lng: '60.5148523',\n    fullName: '叶卡捷琳堡'\n  },\n  Novgorod: {\n    lat: '56.2926609',\n    lng: '43.786664',\n    fullName: '下诺夫哥罗德'\n  },\n  Novosibirsk: {\n    lat: '54.969655',\n    lng: '82.6692313',\n    fullName: '新西伯利亚'\n  },\n  Rostov: {\n    lat: '57.1968001',\n    lng: '39.3805101',\n    fullName: '罗斯托夫'\n  },\n  Uhde: {\n    lat: '51.8298243',\n    lng: '107.4760822',\n    fullName: '乌兰乌德'\n  },\n  Irkutsk: {\n    lat: '52.2983044',\n    lng: '104.1270763',\n    fullName: '伊尔库茨克'\n  },\n  Murmansk: {\n    lat: '68.9673991',\n    lng: '32.9457132',\n    fullName: '摩尔曼斯克'\n  },\n  Sochi: {\n    lat: '43.6017001',\n    lng: '39.6550893',\n    fullName: '索契'\n  },\n  Volgograd: {\n    lat: '48.6700797',\n    lng: '44.22653',\n    fullName: '伏尔加格勒'\n  },\n  Kazan: {\n    lat: '55.7954219',\n    lng: '48.9332217',\n    fullName: '喀山'\n  },\n  RostovOnDon: {\n    lat: '47.2609231',\n    lng: '39.4879174',\n    fullName: '顿河畔罗斯托夫'\n  },\n  Samara: {\n    lat: '53.2605796',\n    lng: '49.9179024',\n    fullName: '萨马拉'\n  },\n  Omsk: {\n    lat: '54.985554',\n    lng: '73.0759653',\n    fullName: '鄂木斯克'\n  },\n  Chelyabinsk: {\n    lat: '55.1519087',\n    lng: '61.1283971',\n    fullName: '车里雅宾斯克'\n  },\n  Khabarovsk: {\n    lat: '48.4647596',\n    lng: '134.9733447',\n    fullName: '伯力'\n  },\n  Pyatigorsk: {\n    lat: '44.0433504',\n    lng: '42.9705613',\n    fullName: '皮亚季戈尔斯克'\n  },\n  Ufa: {\n    lat: '54.8086988',\n    lng: '55.8807921',\n    fullName: '乌法'\n  },\n  Perm: {\n    lat: '58.0201783',\n    lng: '55.9541039',\n    fullName: '彼尔姆'\n  },\n  Krasnoyarsk: {\n    lat: '56.0266501',\n    lng: '92.7256527',\n    fullName: '克拉斯诺亚尔斯克'\n  },\n  Voronezh: {\n    lat: '51.6753557',\n    lng: '38.9559888',\n    fullName: '沃罗涅日'\n  },\n  Saratov: {\n    lat: '51.5341886',\n    lng: '45.8700586',\n    fullName: '萨拉托夫'\n  },\n  Krasnodar: {\n    lat: '45.0535266',\n    lng: '38.9460163',\n    fullName: '克拉斯诺达尔'\n  },\n  Tolyatti: {\n    lat: '53.5218291',\n    lng: '49.2950109',\n    fullName: '陶里亚蒂'\n  },\n  Izevsk: {\n    lat: '56.8637312',\n    lng: '53.0880195',\n    fullName: '伊热夫斯克'\n  },\n  Ulyanovsk: {\n    lat: '54.3110964',\n    lng: '48.326138',\n    fullName: '乌里扬诺夫斯克'\n  },\n  Barnaul: {\n    lat: '53.3332194',\n    lng: '83.5971963',\n    fullName: '巴尔瑙尔'\n  },\n  Yaroslavl: {\n    lat: '57.6523811',\n    lng: '39.7244361',\n    fullName: '雅罗斯拉夫尔'\n  },\n\n  Brasilia: {\n    lat: '-15.7217175',\n    lng: '-48.0783217',\n    fullName: '巴西利亚'\n  },\n  Paulo: {\n    lat: '-23.6821604',\n    lng: '-46.8754884',\n    fullName: '圣保罗'\n  },\n  Iguazul: {\n    lat: '-25.46543',\n    lng: '-54.5972328',\n    fullName: '伊瓜苏市'\n  },\n  Janeiro: {\n    lat: '-22.9109878',\n    lng: '-43.7285235',\n    fullName: '里约热内卢'\n  },\n  Horizonte: {\n    lat: '-19.9178164',\n    lng: '-44.100397',\n    fullName: '贝洛奥里藏特'\n  },\n  Manaus: {\n    lat: '-2.573136',\n    lng: '-60.5418579',\n    fullName: '玛瑙斯市'\n  },\n  Salvador: {\n    lat: '-12.8808976',\n    lng: '-38.557671',\n    fullName: '萨尔瓦多'\n  },\n  Recife: {\n    lat: '-8.0464433',\n    lng: '-35.0025286',\n    fullName: '累西腓'\n  },\n  Alegre: {\n    lat: '-30.1007488',\n    lng: '-51.2990333',\n    fullName: '阿雷格里港'\n  },\n  Goiania: {\n    lat: '-16.6427714',\n    lng: '-49.4025521',\n    fullName: '戈亚尼亚'\n  },\n  Curitiba: {\n    lat: '-25.4950853',\n    lng: '-49.4274875',\n    fullName: '库里蒂巴'\n  },\n\n  Istanbul: {\n    lat: '41.0049823',\n    lng: '28.7319977',\n    fullName: '伊斯坦布尔'\n  },\n  Ankara: {\n    lat: '39.9032923',\n    lng: '32.6226813',\n    fullName: '安卡拉'\n  },\n  Izmir: {\n    lat: '38.4175917',\n    lng: '26.9396782',\n    fullName: '伊兹密尔'\n  },\n  Bursa: {\n    lat: '40.2215936',\n    lng: '28.8922061',\n    fullName: '布尔萨'\n  },\n  Adana: {\n    lat: '36.9973327',\n    lng: '35.1479832',\n    fullName: '阿达纳'\n  },\n  Gaziantep: {\n    lat: '37.0587663',\n    lng: '37.3451175',\n    fullName: '加济安泰普'\n  },\n  Konya: {\n    lat: '37.8784235',\n    lng: '32.3663988',\n    fullName: '科尼亚'\n  },\n  Antalya: {\n    lat: '36.897917',\n    lng: '30.6480652',\n    fullName: '安塔利亚'\n  },\n  Kayserispor: {\n    lat: '38.7233801',\n    lng: '35.4001473',\n    fullName: '开塞利'\n  },\n  Samsun: {\n    lat: '41.291388',\n    lng: '36.2436588',\n    fullName: '萨姆松'\n  },\n\n  Madrid: {\n    lat: '40.4378698',\n    lng: '-3.81962',\n    fullName: '马德里'\n  },\n  Barcelona: {\n    lat: '41.3947688',\n    lng: '2.0787281',\n    fullName: '巴塞罗那'\n  },\n  Valencia: {\n    lat: '39.468913',\n    lng: '-0.4364238',\n    fullName: '巴伦西亚'\n  },\n  Sevilla: {\n    lat: '37.3753501',\n    lng: '-6.0250981',\n    fullName: '塞维利亚'\n  },\n  Cordoba: {\n    lat: '37.8915808',\n    lng: '-4.8195047',\n    fullName: '科尔多瓦'\n  },\n\n  NewYork: {\n    lat: '40.7029741',\n    lng: '-74.2598629',\n    fullName: '纽约'\n  },\n  LosAngeles: {\n    lat: '34.0201812',\n    lng: '-118.6919177',\n    fullName: '洛杉矶'\n  },\n  Chicago: {\n    lat: '41.8336478',\n    lng: '-87.8722387',\n    fullName: '芝加哥'\n  },\n  Houston: {\n    lat: '29.8168824',\n    lng: '-95.6814784',\n    fullName: '休斯敦'\n  },\n  Philadelphia: {\n    lat: '40.0046684',\n    lng: '-75.2581164',\n    fullName: '费城'\n  },\n  Phoenix: {\n    lat: '33.6050991',\n    lng: '-112.4052364',\n    fullName: '菲尼克斯(凤凰城)'\n  },\n  SanDiego: {\n    lat: '32.8242404',\n    lng: '-117.375349',\n    fullName: '圣地亚哥'\n  },\n  Dallas: {\n    lat: '32.8205865',\n    lng: '-96.8714239',\n    fullName: '达拉斯'\n  },\n  SanAntonio: {\n    lat: '29.481137',\n    lng: '-98.7945916',\n    fullName: '圣安东尼奥'\n  },\n  Detroit: {\n    lat: '42.3526257',\n    lng: '-83.2392882',\n    fullName: '底特律'\n  },\n  Indianapolis: {\n    lat: '39.7797003',\n    lng: '-86.2728335',\n    fullName: '印第安纳波利斯'\n  },\n  SanFrancisco: {\n    lat: '37.7576793',\n    lng: '-122.5076399',\n    fullName: '旧金山'\n  },\n  Columbus: {\n    lat: '39.9828671',\n    lng: '-83.1309125',\n    fullName: '哥伦布'\n  },\n  Austin: {\n    lat: '30.3076863',\n    lng: '-97.8934859',\n    fullName: '奥斯汀'\n  },\n  Baltimore: {\n    lat: '39.2846854',\n    lng: '-76.6905258',\n    fullName: '巴尔的摩'\n  },\n  Milwaukee: {\n    lat: '43.057806',\n    lng: '-88.1075131',\n    fullName: '密尔沃基'\n  },\n  Boston: {\n    lat: '42.3133521',\n    lng: '-71.1271968',\n    fullName: '波士顿'\n  },\n  Washington: {\n    lat: '38.8993278',\n    lng: '-77.0846063',\n    fullName: '华盛顿'\n  },\n  Seattle: {\n    lat: '47.6147628',\n    lng: '-122.4759883',\n    fullName: '西雅图'\n  },\n  Atlanta: {\n    lat: '33.7676338',\n    lng: '-84.5606881',\n    fullName: '亚特兰大'\n  },\n  SanJose: {\n    lat: '37.296933',\n    lng: '-121.9574947',\n    fullName: '圣荷西'\n  },\n  Jacksonville: {\n    lat: '30.3446913',\n    lng: '-82.0006437',\n    fullName: '杰克逊维尔'\n  },\n  Memphis: {\n    lat: '35.1288636',\n    lng: '-90.2509716',\n    fullName: '孟菲斯'\n  },\n  Charlotte: {\n    lat: '35.2030728',\n    lng: '-80.97961',\n    fullName: '夏洛特'\n  },\n  FortWorth: {\n    lat: '32.800501',\n    lng: '-97.5695047',\n    fullName: '沃思堡'\n  },\n\n  BD: {\n    lat: '24',\n    lng: '90',\n    fullName: 'BANGLADESH'\n  },\n  BE: {\n    lat: '50.8333',\n    lng: '4',\n    fullName: 'BELGIUM'\n  },\n  BF: {\n    lat: '13',\n    lng: '-2',\n    fullName: 'BURKINA FASO'\n  },\n  BG: {\n    lat: '43',\n    lng: '25',\n    fullName: 'BULGARIA'\n  },\n  BA: {\n    lat: '44',\n    lng: '18',\n    fullName: 'BOSNIA AND HERZEGOVINA'\n  },\n  BB: {\n    lat: '13.1667',\n    lng: '-59.5333',\n    fullName: 'BARBADOS'\n  },\n  WF: {\n    lat: '-13.3',\n    lng: '-176.2',\n    fullName: 'WALLIS AND FUTUNA'\n  },\n  BM: {\n    lat: '32.3333',\n    lng: '-64.75',\n    fullName: 'BERMUDA'\n  },\n  BN: {\n    lat: '4.5',\n    lng: '114.6667',\n    fullName: 'BRUNEI DARUSSALAM'\n  },\n  BO: {\n    lat: '-17',\n    lng: '-65',\n    fullName: 'BOLIVIA, PLURINATIONAL STATE OF'\n  },\n  BH: {\n    lat: '26',\n    lng: '50.55',\n    fullName: 'BAHRAIN'\n  },\n  BI: {\n    lat: '-3.5',\n    lng: '30',\n    fullName: 'BURUNDI'\n  },\n  BJ: {\n    lat: '9.5',\n    lng: '2.25',\n    fullName: 'BENIN'\n  },\n  BT: {\n    lat: '27.5',\n    lng: '90.5',\n    fullName: 'BHUTAN'\n  },\n  JM: {\n    lat: '18.25',\n    lng: '-77.5',\n    fullName: 'JAMAICA'\n  },\n  BV: {\n    lat: '-54.4333',\n    lng: '3.4',\n    fullName: 'BOUVET ISLAND'\n  },\n  BW: {\n    lat: '-22',\n    lng: '24',\n    fullName: 'BOTSWANA'\n  },\n  WS: {\n    lat: '-13.5833',\n    lng: '-172.3333',\n    fullName: 'SAMOA'\n  },\n  BR: {\n    lat: '-10',\n    lng: '-55',\n    fullName: 'BRAZIL'\n  },\n  BS: {\n    lat: '24.25',\n    lng: '-76',\n    fullName: 'BAHAMAS'\n  },\n  JE: {\n    lat: '49.21',\n    lng: '-2.13',\n    fullName: 'JERSEY'\n  },\n  BY: {\n    lat: '53',\n    lng: '28',\n    fullName: 'BELARUS'\n  },\n  BZ: {\n    lat: '17.25',\n    lng: '-88.75',\n    fullName: 'BELIZE'\n  },\n  RU: {\n    lat: '60',\n    lng: '100',\n    fullName: 'RUSSIAN FEDERATION'\n  },\n  RW: {\n    lat: '-2',\n    lng: '30',\n    fullName: 'RWANDA'\n  },\n  RS: {\n    lat: '44',\n    lng: '21',\n    fullName: 'SERBIA'\n  },\n  TL: {\n    lat: '-8.55',\n    lng: '125.5167',\n    fullName: 'TIMOR-LESTE'\n  },\n  RE: {\n    lat: '-21.1',\n    lng: '55.6',\n    fullName: 'RÉUNION'\n  },\n  TM: {\n    lat: '40',\n    lng: '60',\n    fullName: 'TURKMENISTAN'\n  },\n  TJ: {\n    lat: '39',\n    lng: '71',\n    fullName: 'TAJIKISTAN'\n  },\n  RO: {\n    lat: '46',\n    lng: '25',\n    fullName: 'ROMANIA'\n  },\n  TK: {\n    lat: '-9',\n    lng: '-172',\n    fullName: 'TOKELAU'\n  },\n  GW: {\n    lat: '12',\n    lng: '-15',\n    fullName: 'GUINEA-BISSAU'\n  },\n  GU: {\n    lat: '13.4667',\n    lng: '144.7833',\n    fullName: 'GUAM'\n  },\n  GT: {\n    lat: '15.5',\n    lng: '-90.25',\n    fullName: 'GUATEMALA'\n  },\n  GS: {\n    lat: '-54.5',\n    lng: '-37',\n    fullName: 'SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS'\n  },\n  GR: {\n    lat: '39',\n    lng: '22',\n    fullName: 'GREECE'\n  },\n  GQ: {\n    lat: '2',\n    lng: '10',\n    fullName: 'EQUATORIAL GUINEA'\n  },\n  GP: {\n    lat: '16.25',\n    lng: '-61.5833',\n    fullName: 'GUADELOUPE'\n  },\n  JP: {\n    lat: '36',\n    lng: '138',\n    fullName: 'JAPAN'\n  },\n  GY: {\n    lat: '5',\n    lng: '-59',\n    fullName: 'GUYANA'\n  },\n  GG: {\n    lat: '49.5',\n    lng: '-2.56',\n    fullName: 'GUERNSEY'\n  },\n  GF: {\n    lat: '4',\n    lng: '-53',\n    fullName: 'FRENCH GUIANA'\n  },\n  GE: {\n    lat: '42',\n    lng: '43.5',\n    fullName: 'GEORGIA'\n  },\n  GD: {\n    lat: '12.1167',\n    lng: '-61.6667',\n    fullName: 'GRENADA'\n  },\n  GB: {\n    lat: '54',\n    lng: '-2',\n    fullName: 'UNITED KINGDOM'\n  },\n  GA: {\n    lat: '-1',\n    lng: '11.75',\n    fullName: 'GABON'\n  },\n  GN: {\n    lat: '11',\n    lng: '-10',\n    fullName: 'GUINEA'\n  },\n  GM: {\n    lat: '13.4667',\n    lng: '-16.5667',\n    fullName: 'GAMBIA'\n  },\n  GL: {\n    lat: '72',\n    lng: '-40',\n    fullName: 'GREENLAND'\n  },\n  GI: {\n    lat: '36.1833',\n    lng: '-5.3667',\n    fullName: 'GIBRALTAR'\n  },\n  GH: {\n    lat: '8',\n    lng: '-2',\n    fullName: 'GHANA'\n  },\n  OM: {\n    lat: '21',\n    lng: '57',\n    fullName: 'OMAN'\n  },\n  TN: {\n    lat: '34',\n    lng: '9',\n    fullName: 'TUNISIA'\n  },\n  JO: {\n    lat: '31',\n    lng: '36',\n    fullName: 'JORDAN'\n  },\n  HR: {\n    lat: '45.1667',\n    lng: '15.5',\n    fullName: 'CROATIA'\n  },\n  HT: {\n    lat: '19',\n    lng: '-72.4167',\n    fullName: 'HAITI'\n  },\n  HU: {\n    lat: '47',\n    lng: '20',\n    fullName: 'HUNGARY'\n  },\n  HK: {\n    lat: '22.25',\n    lng: '114.1667',\n    fullName: 'HONG KONG'\n  },\n  HN: {\n    lat: '15',\n    lng: '-86.5',\n    fullName: 'HONDURAS'\n  },\n  HM: {\n    lat: '-53.1',\n    lng: '72.5167',\n    fullName: 'HEARD ISLAND AND MCDONALD ISLANDS'\n  },\n  VE: {\n    lat: '8',\n    lng: '-66',\n    fullName: 'VENEZUELA, BOLIVARIAN REPUBLIC OF'\n  },\n  PR: {\n    lat: '18.25',\n    lng: '-66.5',\n    fullName: 'PUERTO RICO'\n  },\n  PS: {\n    lat: '32',\n    lng: '35.25',\n    fullName: 'PALESTINIAN TERRITORY, OCCUPIED'\n  },\n  PW: {\n    lat: '7.5',\n    lng: '134.5',\n    fullName: 'PALAU'\n  },\n  PT: {\n    lat: '39.5',\n    lng: '-8',\n    fullName: 'PORTUGAL'\n  },\n  KN: {\n    lat: '17.3333',\n    lng: '-62.75',\n    fullName: 'SAINT KITTS AND NEVIS'\n  },\n  PY: {\n    lat: '-23',\n    lng: '-58',\n    fullName: 'PARAGUAY'\n  },\n  IQ: {\n    lat: '33',\n    lng: '44',\n    fullName: 'IRAQ'\n  },\n  PA: {\n    lat: '9',\n    lng: '-80',\n    fullName: 'PANAMA'\n  },\n  PF: {\n    lat: '-15',\n    lng: '-140',\n    fullName: 'FRENCH POLYNESIA'\n  },\n  PG: {\n    lat: '-6',\n    lng: '147',\n    fullName: 'PAPUA NEW GUINEA'\n  },\n  PE: {\n    lat: '-10',\n    lng: '-76',\n    fullName: 'PERU'\n  },\n  PK: {\n    lat: '30',\n    lng: '70',\n    fullName: 'PAKISTAN'\n  },\n  PH: {\n    lat: '13',\n    lng: '122',\n    fullName: 'PHILIPPINES'\n  },\n  PN: {\n    lat: '-24.7',\n    lng: '-127.4',\n    fullName: 'PITCAIRN'\n  },\n  PL: {\n    lat: '52',\n    lng: '20',\n    fullName: 'POLAND'\n  },\n  PM: {\n    lat: '46.8333',\n    lng: '-56.3333',\n    fullName: 'SAINT PIERRE AND MIQUElng'\n  },\n  ZM: {\n    lat: '-15',\n    lng: '30',\n    fullName: 'ZAMBIA'\n  },\n  EH: {\n    lat: '24.5',\n    lng: '-13',\n    fullName: 'WESTERN SAHARA'\n  },\n  EE: {\n    lat: '59',\n    lng: '26',\n    fullName: 'ESTONIA'\n  },\n  EG: {\n    lat: '27',\n    lng: '30',\n    fullName: 'EGYPT'\n  },\n  ZA: {\n    lat: '-29',\n    lng: '24',\n    fullName: 'SOUTH AFRICA'\n  },\n  EC: {\n    lat: '-2',\n    lng: '-77.5',\n    fullName: 'ECUADOR'\n  },\n  IT: {\n    lat: '42.8333',\n    lng: '12.8333',\n    fullName: 'ITALY'\n  },\n  VN: {\n    lat: '16',\n    lng: '106',\n    fullName: 'VIET NAM'\n  },\n  SB: {\n    lat: '-8',\n    lng: '159',\n    fullName: 'SOLOMON ISLANDS'\n  },\n  ET: {\n    lat: '8',\n    lng: '38',\n    fullName: 'ETHIOPIA'\n  },\n  SO: {\n    lat: '10',\n    lng: '49',\n    fullName: 'SOMALIA'\n  },\n  ZW: {\n    lat: '-20',\n    lng: '30',\n    fullName: 'ZIMBABWE'\n  },\n  SA: {\n    lat: '25',\n    lng: '45',\n    fullName: 'SAUDI ARABIA'\n  },\n  ES: {\n    lat: '40',\n    lng: '-4',\n    fullName: 'SPAIN'\n  },\n  ER: {\n    lat: '15',\n    lng: '39',\n    fullName: 'ERITREA'\n  },\n  ME: {\n    lat: '42',\n    lng: '19',\n    fullName: 'MONTENEGRO'\n  },\n  MD: {\n    lat: '47',\n    lng: '29',\n    fullName: 'MOLDOVA, REPUBLIC OF'\n  },\n  MG: {\n    lat: '-20',\n    lng: '47',\n    fullName: 'MADAGASCAR'\n  },\n  MA: {\n    lat: '32',\n    lng: '-5',\n    fullName: 'MOROCCO'\n  },\n  MC: {\n    lat: '43.7333',\n    lng: '7.4',\n    fullName: 'MONACO'\n  },\n  UZ: {\n    lat: '41',\n    lng: '64',\n    fullName: 'UZBEKISTAN'\n  },\n  MM: {\n    lat: '22',\n    lng: '98',\n    fullName: 'MYANMAR'\n  },\n  ML: {\n    lat: '17',\n    lng: '-4',\n    fullName: 'MALI'\n  },\n  MO: {\n    lat: '22.1667',\n    lng: '113.55',\n    fullName: 'MACAO'\n  },\n  MN: {\n    lat: '46',\n    lng: '105',\n    fullName: 'MONGOLIA'\n  },\n  MH: {\n    lat: '9',\n    lng: '168',\n    fullName: 'MARSHALL ISLANDS'\n  },\n  MK: {\n    lat: '41.8333',\n    lng: '22',\n    fullName: 'MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF'\n  },\n  MU: {\n    lat: '-20.2833',\n    lng: '57.55',\n    fullName: 'MAURITIUS'\n  },\n  MT: {\n    lat: '35.8333',\n    lng: '14.5833',\n    fullName: 'MALTA'\n  },\n  MW: {\n    lat: '-13.5',\n    lng: '34',\n    fullName: 'MALAWI'\n  },\n  MV: {\n    lat: '3.25',\n    lng: '73',\n    fullName: 'MALDIVES'\n  },\n  MQ: {\n    lat: '14.6667',\n    lng: '-61',\n    fullName: 'MARTINIQUE'\n  },\n  MP: {\n    lat: '15.2',\n    lng: '145.75',\n    fullName: 'NORTHERN MARIANA ISLANDS'\n  },\n  MS: {\n    lat: '16.75',\n    lng: '-62.2',\n    fullName: 'MONTSERRAT'\n  },\n  MR: {\n    lat: '20',\n    lng: '-12',\n    fullName: 'MAURITANIA'\n  },\n  IM: {\n    lat: '54.23',\n    lng: '-4.55',\n    fullName: 'ISLE OF MAN'\n  },\n  UG: {\n    lat: '1',\n    lng: '32',\n    fullName: 'UGANDA'\n  },\n  MY: {\n    lat: '2.5',\n    lng: '112.5',\n    fullName: 'MALAYSIA'\n  },\n  MX: {\n    lat: '23',\n    lng: '-102',\n    fullName: 'MEXICO'\n  },\n  IL: {\n    lat: '31.5',\n    lng: '34.75',\n    fullName: 'ISRAEL'\n  },\n  FR: {\n    lat: '46',\n    lng: '2',\n    fullName: 'FRANCE'\n  },\n  AW: {\n    lat: '12.5',\n    lng: '-69.9667',\n    fullName: 'ARUBA'\n  },\n  SH: {\n    lat: '-15.9333',\n    lng: '-5.7',\n    fullName: 'SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA'\n  },\n  SJ: {\n    lat: '78',\n    lng: '20',\n    fullName: 'SVALBARD AND JAN MAYEN'\n  },\n  FI: {\n    lat: '64',\n    lng: '26',\n    fullName: 'FINLAND'\n  },\n  FJ: {\n    lat: '-18',\n    lng: '175',\n    fullName: 'FIJI'\n  },\n  FK: {\n    lat: '-51.75',\n    lng: '-59',\n    fullName: 'FALKLAND ISLANDS (MALVINAS)'\n  },\n  FM: {\n    lat: '6.9167',\n    lng: '158.25',\n    fullName: 'MICRONESIA, FEDERATED STATES OF'\n  },\n  FO: {\n    lat: '62',\n    lng: '-7',\n    fullName: 'FAROE ISLANDS'\n  },\n  NI: {\n    lat: '13',\n    lng: '-85',\n    fullName: 'NICARAGUA'\n  },\n  NL: {\n    lat: '52.5',\n    lng: '5.75',\n    fullName: 'NETHERLANDS'\n  },\n  NO: {\n    lat: '62',\n    lng: '10',\n    fullName: 'NORWAY'\n  },\n  NA: {\n    lat: '-22',\n    lng: '17',\n    fullName: 'NAMIBIA'\n  },\n  VU: {\n    lat: '-16',\n    lng: '167',\n    fullName: 'VANUATU'\n  },\n  NC: {\n    lat: '-21.5',\n    lng: '165.5',\n    fullName: 'NEW CALEDONIA'\n  },\n  NE: {\n    lat: '16',\n    lng: '8',\n    fullName: 'NIGER'\n  },\n  NF: {\n    lat: '-29.0333',\n    lng: '167.95',\n    fullName: 'NORFOLK ISLAND'\n  },\n  NG: {\n    lat: '10',\n    lng: '8',\n    fullName: 'NIGERIA'\n  },\n  NZ: {\n    lat: '-41',\n    lng: '174',\n    fullName: 'NEW ZEALAND'\n  },\n  NP: {\n    lat: '28',\n    lng: '84',\n    fullName: 'NEPAL'\n  },\n  NR: {\n    lat: '-0.5333',\n    lng: '166.9167',\n    fullName: 'NAURU'\n  },\n  NU: {\n    lat: '-19.0333',\n    lng: '-169.8667',\n    fullName: 'NIUE'\n  },\n  CK: {\n    lat: '-21.2333',\n    lng: '-159.7667',\n    fullName: 'COOK ISLANDS'\n  },\n  CI: {\n    lat: '8',\n    lng: '-5',\n    fullName: \"CÔTE D'IVOIRE\"\n  },\n  CH: {\n    lat: '47',\n    lng: '8',\n    fullName: 'SWITZERLAND'\n  },\n  CO: {\n    lat: '4',\n    lng: '-72',\n    fullName: 'COLOMBIA'\n  },\n  CN: {\n    lat: '35',\n    lng: '105',\n    fullName: 'CHINA'\n  },\n  CM: {\n    lat: '6',\n    lng: '12',\n    fullName: 'CAMEROON'\n  },\n  CL: {\n    lat: '-30',\n    lng: '-71',\n    fullName: 'CHILE'\n  },\n  CC: {\n    lat: '-12.5',\n    lng: '96.8333',\n    fullName: 'COCOS (KEELING) ISLANDS'\n  },\n  CA: {\n    lat: '60',\n    lng: '-95',\n    fullName: 'CANADA'\n  },\n  CG: {\n    lat: '-1',\n    lng: '15',\n    fullName: 'CONGO'\n  },\n  CF: {\n    lat: '7',\n    lng: '21',\n    fullName: 'CENTRAL AFRICAN REPUBLIC'\n  },\n  CD: {\n    lat: '0',\n    lng: '25',\n    fullName: 'CONGO, THE DEMOCRATIC REPUBLIC OF THE'\n  },\n  CZ: {\n    lat: '49.75',\n    lng: '15.5',\n    fullName: 'CZECH REPUBLIC'\n  },\n  CY: {\n    lat: '35',\n    lng: '33',\n    fullName: 'CYPRUS'\n  },\n  CX: {\n    lat: '-10.5',\n    lng: '105.6667',\n    fullName: 'CHRISTMAS ISLAND'\n  },\n  CR: {\n    lat: '10',\n    lng: '-84',\n    fullName: 'COSTA RICA'\n  },\n  CV: {\n    lat: '16',\n    lng: '-24',\n    fullName: 'CAPE VERDE'\n  },\n  CU: {\n    lat: '21.5',\n    lng: '-80',\n    fullName: 'CUBA'\n  },\n  SZ: {\n    lat: '-26.5',\n    lng: '31.5',\n    fullName: 'SWAZILAND'\n  },\n  SY: {\n    lat: '35',\n    lng: '38',\n    fullName: 'SYRIAN ARAB REPUBLIC'\n  },\n  KG: {\n    lat: '41',\n    lng: '75',\n    fullName: 'KYRGYZSTAN'\n  },\n  KE: {\n    lat: '1',\n    lng: '38',\n    fullName: 'KENYA'\n  },\n  SR: {\n    lat: '4',\n    lng: '-56',\n    fullName: 'SURINAME'\n  },\n  KI: {\n    lat: '1.4167',\n    lng: '173',\n    fullName: 'KIRIBATI'\n  },\n  KH: {\n    lat: '13',\n    lng: '105',\n    fullName: 'CAMBODIA'\n  },\n  SV: {\n    lat: '13.8333',\n    lng: '-88.9167',\n    fullName: 'EL SALVADOR'\n  },\n  KM: {\n    lat: '-12.1667',\n    lng: '44.25',\n    fullName: 'COMOROS'\n  },\n  ST: {\n    lat: '1',\n    lng: '7',\n    fullName: 'SAO TOME AND PRINCIPE'\n  },\n  SK: {\n    lat: '48.6667',\n    lng: '19.5',\n    fullName: 'SLOVAKIA'\n  },\n  KR: {\n    lat: '37',\n    lng: '127.5',\n    fullName: 'KOREA, REPUBLIC OF'\n  },\n  SI: {\n    lat: '46',\n    lng: '15',\n    fullName: 'SLOVENIA'\n  },\n  KP: {\n    lat: '40',\n    lng: '127',\n    fullName: \"KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF\"\n  },\n  KW: {\n    lat: '29.3375',\n    lng: '47.6581',\n    fullName: 'KUWAIT'\n  },\n  SN: {\n    lat: '14',\n    lng: '-14',\n    fullName: 'SENEGAL'\n  },\n  SM: {\n    lat: '43.7667',\n    lng: '12.4167',\n    fullName: 'SAN MARINO'\n  },\n  SL: {\n    lat: '8.5',\n    lng: '-11.5',\n    fullName: 'SIERRA LEONE'\n  },\n  SC: {\n    lat: '-4.5833',\n    lng: '55.6667',\n    fullName: 'SEYCHELLES'\n  },\n  KZ: {\n    lat: '48',\n    lng: '68',\n    fullName: 'KAZAKHSTAN'\n  },\n  KY: {\n    lat: '19.5',\n    lng: '-80.5',\n    fullName: 'CAYMAN ISLANDS'\n  },\n  SG: {\n    lat: '1.3667',\n    lng: '103.8',\n    fullName: 'SINGAPORE'\n  },\n  SE: {\n    lat: '62',\n    lng: '15',\n    fullName: 'SWEDEN'\n  },\n  SD: {\n    lat: '15',\n    lng: '30',\n    fullName: 'SUDAN'\n  },\n  DO: {\n    lat: '19',\n    lng: '-70.6667',\n    fullName: 'DOMINICAN REPUBLIC'\n  },\n  DM: {\n    lat: '15.4167',\n    lng: '-61.3333',\n    fullName: 'DOMINICA'\n  },\n  DJ: {\n    lat: '11.5',\n    lng: '43',\n    fullName: 'DJIBOUTI'\n  },\n  DK: {\n    lat: '56',\n    lng: '10',\n    fullName: 'DENMARK'\n  },\n  VG: {\n    lat: '18.5',\n    lng: '-64.5',\n    fullName: 'VIRGIN ISLANDS, BRITISH'\n  },\n  DE: {\n    lat: '51',\n    lng: '9',\n    fullName: 'GERMANY'\n  },\n  YE: {\n    lat: '15',\n    lng: '48',\n    fullName: 'YEMEN'\n  },\n  DZ: {\n    lat: '28',\n    lng: '3',\n    fullName: 'ALGERIA'\n  },\n  US: {\n    lat: '38',\n    lng: '-97',\n    fullName: 'UNITED STATES'\n  },\n  US1: {\n    lat: '45',\n    lng: '-108',\n    fullName: 'UNITED STATES 1'\n  },\n  US2: {\n    lat: '36',\n    lng: '-102',\n    fullName: 'UNITED STATES 2'\n  },\n  UY: {\n    lat: '-33',\n    lng: '-56',\n    fullName: 'URUGUAY'\n  },\n  YT: {\n    lat: '-12.8333',\n    lng: '45.1667',\n    fullName: 'MAYOTTE'\n  },\n  UM: {\n    lat: '19.2833',\n    lng: '166.6',\n    fullName: 'UNITED STATES MINOR OUTLYING ISLANDS'\n  },\n  LB: {\n    lat: '33.8333',\n    lng: '35.8333',\n    fullName: 'LEBANON'\n  },\n  LC: {\n    lat: '13.8833',\n    lng: '-61.1333',\n    fullName: 'SAINT LUCIA'\n  },\n  LA: {\n    lat: '18',\n    lng: '105',\n    fullName: \"LAO PEOPLE'S DEMOCRATIC REPUBLIC\"\n  },\n  TV: {\n    lat: '-8',\n    lng: '178',\n    fullName: 'TUVALU'\n  },\n  TW: {\n    lat: '23.5',\n    lng: '121',\n    fullName: 'TAIWAN-PROVINCE'\n  },\n  TT: {\n    lat: '11',\n    lng: '-61',\n    fullName: 'TRINIDAD AND TOBAGO'\n  },\n  TR: {\n    lat: '39',\n    lng: '35',\n    fullName: 'TURKEY'\n  },\n  LK: {\n    lat: '7',\n    lng: '81',\n    fullName: 'SRI LANKA'\n  },\n  LI: {\n    lat: '47.1667',\n    lng: '9.5333',\n    fullName: 'LIECHTENSTEIN'\n  },\n  LV: {\n    lat: '57',\n    lng: '25',\n    fullName: 'LATVIA'\n  },\n  TO: {\n    lat: '-20',\n    lng: '-175',\n    fullName: 'TONGA'\n  },\n  LT: {\n    lat: '56',\n    lng: '24',\n    fullName: 'LITHUANIA'\n  },\n  LU: {\n    lat: '49.75',\n    lng: '6.1667',\n    fullName: 'LUXEMBOURG'\n  },\n  LR: {\n    lat: '6.5',\n    lng: '-9.5',\n    fullName: 'LIBERIA'\n  },\n  LS: {\n    lat: '-29.5',\n    lng: '28.5',\n    fullName: 'LESOTHO'\n  },\n  TH: {\n    lat: '15',\n    lng: '100',\n    fullName: 'THAILAND'\n  },\n  TF: {\n    lat: '-43',\n    lng: '67',\n    fullName: 'FRENCH SOUTHERN TERRITORIES'\n  },\n  TG: {\n    lat: '8',\n    lng: '1.1667',\n    fullName: 'TOGO'\n  },\n  TD: {\n    lat: '15',\n    lng: '19',\n    fullName: 'CHAD'\n  },\n  TC: {\n    lat: '21.75',\n    lng: '-71.5833',\n    fullName: 'TURKS AND CAICOS ISLANDS'\n  },\n  LY: {\n    lat: '25',\n    lng: '17',\n    fullName: 'LIBYA'\n  },\n  VA: {\n    lat: '41.9',\n    lng: '12.45',\n    fullName: 'HOLY SEE (VATICAN CITY STATE)'\n  },\n  VC: {\n    lat: '13.25',\n    lng: '-61.2',\n    fullName: 'SAINT VINCENT AND THE GRENADINES'\n  },\n  AE: {\n    lat: '24',\n    lng: '54',\n    fullName: 'UNITED ARAB EMIRATES'\n  },\n  AD: {\n    lat: '42.5',\n    lng: '1.6',\n    fullName: 'ANDORRA'\n  },\n  AG: {\n    lat: '17.05',\n    lng: '-61.8',\n    fullName: 'ANTIGUA AND BARBUDA'\n  },\n  AF: {\n    lat: '33',\n    lng: '65',\n    fullName: 'AFGHANISTAN'\n  },\n  AI: {\n    lat: '18.25',\n    lng: '-63.1667',\n    fullName: 'ANGUILLA'\n  },\n  VI: {\n    lat: '18.3333',\n    lng: '-64.8333',\n    fullName: 'VIRGIN ISLANDS, U.S.'\n  },\n  IS: {\n    lat: '65',\n    lng: '-18',\n    fullName: 'ICELAND'\n  },\n  IR: {\n    lat: '32',\n    lng: '53',\n    fullName: 'IRAN, ISLAMIC REPUBLIC OF'\n  },\n  AM: {\n    lat: '40',\n    lng: '45',\n    fullName: 'ARMENIA'\n  },\n  AL: {\n    lat: '41',\n    lng: '20',\n    fullName: 'ALBANIA'\n  },\n  AO: {\n    lat: '-12.5',\n    lng: '18.5',\n    fullName: 'ANGOLA'\n  },\n  AN: {\n    lat: '12.25',\n    lng: '-68.75',\n    fullName: 'Netherlands Antilles'\n  },\n  AQ: {\n    lat: '-90',\n    lng: '0',\n    fullName: 'ANTARCTICA'\n  },\n  AS: {\n    lat: '-14.3333',\n    lng: '-170',\n    fullName: 'AMERICAN SAMOA'\n  },\n  AR: {\n    lat: '-34',\n    lng: '-64',\n    fullName: 'ARGENTINA'\n  },\n  AU: {\n    lat: '-27',\n    lng: '133',\n    fullName: 'AUSTRALIA'\n  },\n  AT: {\n    lat: '47.3333',\n    lng: '13.3333',\n    fullName: 'AUSTRIA'\n  },\n  IO: {\n    lat: '-6',\n    lng: '71.5',\n    fullName: 'BRITISH INDIAN OCEAN TERRITORY'\n  },\n  IN: {\n    lat: '20',\n    lng: '77',\n    fullName: 'INDIA'\n  },\n  TZ: {\n    lat: '-6',\n    lng: '35',\n    fullName: 'TANZANIA, UNITED REPUBLIC OF'\n  },\n  AZ: {\n    lat: '40.5',\n    lng: '47.5',\n    fullName: 'AZERBAIJAN'\n  },\n  IE: {\n    lat: '53',\n    lng: '-8',\n    fullName: 'IRELAND'\n  },\n  ID: {\n    lat: '-5',\n    lng: '120',\n    fullName: 'INDONESIA'\n  },\n  UA: {\n    lat: '49',\n    lng: '32',\n    fullName: 'UKRAINE'\n  },\n  QA: {\n    lat: '25.5',\n    lng: '51.25',\n    fullName: 'QATAR'\n  },\n  MZ: {\n    lat: '-18.25',\n    lng: '35',\n    fullName: 'MOZAMBIQUE'\n  },\n  云南省: {\n    countryCode: 'CN',\n    lat: 25.045806,\n    lng: 102.71000200000003\n  },\n  内蒙古自治区: {\n    countryCode: 'CN',\n    lat: 40.817498,\n    lng: 111.76561800000002\n  },\n  吉林省: {\n    countryCode: 'CN',\n    lat: 43.896536,\n    lng: 125.32599000000005\n  },\n  四川省: {\n    countryCode: 'CN',\n    lat: 30.651652,\n    lng: 104.07593099999997\n  },\n  宁夏回族自治区: {\n    countryCode: 'CN',\n    lat: 38.471318,\n    lng: 106.25875399999995\n  },\n  安徽省: {\n    countryCode: 'CN',\n    lat: 31.861184,\n    lng: 117.28492299999994\n  },\n  山东省: {\n    countryCode: 'CN',\n    lat: 36.66853,\n    lng: 117.02035899999998\n  },\n  山西省: {\n    countryCode: 'CN',\n    lat: 37.873532,\n    lng: 112.56239800000003\n  },\n  广东省: {\n    countryCode: 'CN',\n    lat: 23.132191,\n    lng: 113.26653099999999\n  },\n  广西壮族自治区: {\n    countryCode: 'CN',\n    lat: 22.815478,\n    lng: 108.32754599999998\n  },\n  新疆维吾尔自治区: {\n    countryCode: 'CN',\n    lat: 43.793026,\n    lng: 87.627704\n  },\n  江苏省: {\n    countryCode: 'CN',\n    lat: 32.061707,\n    lng: 118.76323200000002\n  },\n  江西省: {\n    countryCode: 'CN',\n    lat: 28.675697,\n    lng: 115.90922799999998\n  },\n  河北省: {\n    countryCode: 'CN',\n    lat: 38.037057,\n    lng: 114.46866499999999\n  },\n  河南省: {\n    countryCode: 'CN',\n    lat: 34.765515,\n    lng: 113.753602\n  },\n  浙江省: {\n    countryCode: 'CN',\n    lat: 30.267447,\n    lng: 120.15279199999998\n  },\n  海南省: {\n    countryCode: 'CN',\n    lat: 20.017378,\n    lng: 110.34922899999992\n  },\n  湖北省: {\n    countryCode: 'CN',\n    lat: 30.546498,\n    lng: 114.34186199999999\n  },\n  湖南省: {\n    countryCode: 'CN',\n    lat: 28.112444,\n    lng: 112.98380999999995\n  },\n  甘肃省: {\n    countryCode: 'CN',\n    lat: 36.059421,\n    lng: 103.82630799999993\n  },\n  福建省: {\n    countryCode: 'CN',\n    lat: 26.10078,\n    lng: 119.29514399999994\n  },\n  贵州省: {\n    countryCode: 'CN',\n    lat: 26.598194,\n    lng: 106.70740999999998\n  },\n  辽宁省: {\n    countryCode: 'CN',\n    lat: 41.835436,\n    lng: 123.42910499999994\n  },\n  陕西省: {\n    countryCode: 'CN',\n    lat: 34.265472,\n    lng: 108.95423900000003\n  },\n  青海省: {\n    countryCode: 'CN',\n    lat: 36.620901,\n    lng: 101.78019900000004\n  },\n  黑龙江省: {\n    countryCode: 'CN',\n    lat: 45.74236699999999,\n    lng: 126.66166499999997\n  },\n  重庆: {\n    lng: 107.7539,\n    lat: 30.1904,\n    fullName: '重庆市',\n    province: '重庆',\n    countryCode: 'CN'\n  },\n  北京: {\n    lng: 116.4551,\n    lat: 40.2539,\n    fullName: '北京市',\n    province: '北京',\n    countryCode: 'CN'\n  },\n  天津: {\n    lng: 117.4219,\n    lat: 39.4189,\n    fullName: '天津市',\n    province: '天津',\n    countryCode: 'CN'\n  },\n  上海: {\n    lng: 121.4648,\n    lat: 31.2891,\n    fullName: '上海市',\n    province: '上海',\n    countryCode: 'CN'\n  },\n  香港: {\n    lng: 114.2578,\n    lat: 22.3242,\n    fullName: '香港',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  澳门: {\n    lng: 113.5547,\n    lat: 22.1484,\n    fullName: '澳门',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  巴音: {\n    lng: 88.1653,\n    lat: 39.6002,\n    fullName: '巴音郭楞蒙古自治州',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  和田: {\n    lng: 81.167,\n    lat: 36.9855,\n    fullName: '和田地区',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  哈密: {\n    lng: 93.7793,\n    lat: 42.9236,\n    fullName: '哈密地区',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  阿克: {\n    lng: 82.9797,\n    lat: 41.0229,\n    fullName: '阿克苏地区',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  阿勒: {\n    lng: 88.2971,\n    lat: 47.0929,\n    fullName: '阿勒泰地区',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  喀什: {\n    lng: 77.168,\n    lat: 37.8534,\n    fullName: '喀什地区',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  塔城: {\n    lng: 86.6272,\n    lat: 45.8514,\n    fullName: '塔城地区',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  昌吉: {\n    lng: 89.6814,\n    lat: 44.4507,\n    fullName: '昌吉回族自治州',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  克孜: {\n    lng: 74.6301,\n    lat: 39.5233,\n    fullName: '克孜勒苏柯尔克孜自治州',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  吐鲁: {\n    lng: 89.6375,\n    lat: 42.4127,\n    fullName: '吐鲁番地区',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  伊犁: {\n    lng: 82.5513,\n    lat: 43.5498,\n    fullName: '伊犁哈萨克自治州',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  博尔: {\n    lng: 81.8481,\n    lat: 44.6979,\n    fullName: '博尔塔拉蒙古自治州',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  乌鲁: {\n    lng: 87.9236,\n    lat: 43.5883,\n    fullName: '乌鲁木齐市',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  克拉: {\n    lng: 85.2869,\n    lat: 45.5054,\n    fullName: '克拉玛依市',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  阿拉尔: {\n    lng: 81.2769,\n    lat: 40.6549,\n    fullName: '阿拉尔市',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  图木: {\n    lng: 79.1345,\n    lat: 39.8749,\n    fullName: '图木舒克市',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  五家: {\n    lng: 87.5391,\n    lat: 44.3024,\n    fullName: '五家渠市',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  石河: {\n    lng: 86.0229,\n    lat: 44.2914,\n    fullName: '石河子市',\n    province: '新疆',\n    countryCode: 'CN'\n  },\n  那曲: {\n    lng: 88.1982,\n    lat: 33.3215,\n    fullName: '那曲地区',\n    province: '西藏',\n    countryCode: 'CN'\n  },\n  阿里: {\n    lng: 82.3645,\n    lat: 32.7667,\n    fullName: '阿里地区',\n    province: '西藏',\n    countryCode: 'CN'\n  },\n  日喀: {\n    lng: 86.2427,\n    lat: 29.5093,\n    fullName: '日喀则地区',\n    province: '西藏',\n    countryCode: 'CN'\n  },\n  林芝: {\n    lng: 95.4602,\n    lat: 29.1138,\n    fullName: '林芝地区',\n    province: '西藏',\n    countryCode: 'CN'\n  },\n  昌都: {\n    lng: 97.0203,\n    lat: 30.7068,\n    fullName: '昌都地区',\n    province: '西藏',\n    countryCode: 'CN'\n  },\n  山南: {\n    lng: 92.2083,\n    lat: 28.3392,\n    fullName: '山南地区',\n    province: '西藏',\n    countryCode: 'CN'\n  },\n  拉萨: {\n    lng: 91.1865,\n    lat: 30.1465,\n    fullName: '拉萨市',\n    province: '西藏',\n    countryCode: 'CN'\n  },\n  呼伦: {\n    lng: 120.8057,\n    lat: 50.2185,\n    fullName: '呼伦贝尔市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  阿拉善: {\n    lng: 102.019,\n    lat: 40.1001,\n    fullName: '阿拉善盟',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  锡林: {\n    lng: 115.6421,\n    lat: 44.176,\n    fullName: '锡林郭勒盟',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  鄂尔: {\n    lng: 108.9734,\n    lat: 39.2487,\n    fullName: '鄂尔多斯市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  赤峰: {\n    lng: 118.6743,\n    lat: 43.2642,\n    fullName: '赤峰市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  巴彦: {\n    lng: 107.5562,\n    lat: 41.3196,\n    fullName: '巴彦淖尔市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  通辽: {\n    lng: 121.4758,\n    lat: 43.9673,\n    fullName: '通辽市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  乌兰: {\n    lng: 112.5769,\n    lat: 41.77,\n    fullName: '乌兰察布市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  兴安: {\n    lng: 121.3879,\n    lat: 46.1426,\n    fullName: '兴安盟',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  包头: {\n    lng: 110.3467,\n    lat: 41.4899,\n    fullName: '包头市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  呼和: {\n    lng: 111.4124,\n    lat: 40.4901,\n    fullName: '呼和浩特市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  乌海: {\n    lng: 106.886,\n    lat: 39.4739,\n    fullName: '乌海市',\n    province: '内蒙古',\n    countryCode: 'CN'\n  },\n  海西: {\n    lng: 94.9768,\n    lat: 37.1118,\n    fullName: '海西蒙古族藏族自治州',\n    province: '青海',\n    countryCode: 'CN'\n  },\n  玉树: {\n    lng: 93.5925,\n    lat: 33.9368,\n    fullName: '玉树藏族自治州',\n    province: '青海',\n    countryCode: 'CN'\n  },\n  果洛: {\n    lng: 99.3823,\n    lat: 34.0466,\n    fullName: '果洛藏族自治州',\n    province: '青海',\n    countryCode: 'CN'\n  },\n  海南: {\n    lng: 100.3711,\n    lat: 35.9418,\n    fullName: '海南藏族自治州',\n    province: '青海',\n    countryCode: 'CN'\n  },\n  海北: {\n    lng: 100.3711,\n    lat: 37.9138,\n    fullName: '海北藏族自治州',\n    province: '青海',\n    countryCode: 'CN'\n  },\n  黄南: {\n    lng: 101.5686,\n    lat: 35.1178,\n    fullName: '黄南藏族自治州',\n    province: '青海',\n    countryCode: 'CN'\n  },\n  海东: {\n    lng: 102.3706,\n    lat: 36.2988,\n    fullName: '海东地区',\n    province: '青海',\n    countryCode: 'CN'\n  },\n  西宁: {\n    lng: 101.4038,\n    lat: 36.8207,\n    fullName: '西宁市',\n    province: '青海',\n    countryCode: 'CN'\n  },\n  甘孜: {\n    lng: 99.9207,\n    lat: 31.0803,\n    fullName: '甘孜藏族自治州',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  阿坝: {\n    lng: 102.4805,\n    lat: 32.4536,\n    fullName: '阿坝藏族羌族自治州',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  凉山: {\n    lng: 101.9641,\n    lat: 27.6746,\n    fullName: '凉山彝族自治州',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  绵阳: {\n    lng: 104.7327,\n    lat: 31.8713,\n    fullName: '绵阳市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  达州: {\n    lng: 107.6111,\n    lat: 31.333,\n    fullName: '达州市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  广元: {\n    lng: 105.6885,\n    lat: 32.2284,\n    fullName: '广元市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  雅安: {\n    lng: 102.6672,\n    lat: 29.8938,\n    fullName: '雅安市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  宜宾: {\n    lng: 104.6558,\n    lat: 28.548,\n    fullName: '宜宾市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  乐山: {\n    lng: 103.5791,\n    lat: 29.1742,\n    fullName: '乐山市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  南充: {\n    lng: 106.2048,\n    lat: 31.1517,\n    fullName: '南充市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  巴中: {\n    lng: 107.0618,\n    lat: 31.9977,\n    fullName: '巴中市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  泸州: {\n    lng: 105.4578,\n    lat: 28.493,\n    fullName: '泸州市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  成都: {\n    lng: 103.9526,\n    lat: 30.7617,\n    fullName: '成都市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  资阳: {\n    lng: 104.9744,\n    lat: 30.1575,\n    fullName: '资阳市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  攀枝: {\n    lng: 101.6895,\n    lat: 26.7133,\n    fullName: '攀枝花市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  眉山: {\n    lng: 103.8098,\n    lat: 30.0146,\n    fullName: '眉山市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  广安: {\n    lng: 106.6333,\n    lat: 30.4376,\n    fullName: '广安市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  德阳: {\n    lng: 104.48,\n    lat: 31.1133,\n    fullName: '德阳市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  内江: {\n    lng: 104.8535,\n    lat: 29.6136,\n    fullName: '内江市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  遂宁: {\n    lng: 105.5347,\n    lat: 30.6683,\n    fullName: '遂宁市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  自贡: {\n    lng: 104.6667,\n    lat: 29.2786,\n    fullName: '自贡市',\n    province: '四川',\n    countryCode: 'CN'\n  },\n  黑河: {\n    lng: 127.1448,\n    lat: 49.2957,\n    fullName: '黑河市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  大兴: {\n    lng: 124.1016,\n    lat: 52.2345,\n    fullName: '大兴安岭地区',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  哈尔: {\n    lng: 127.9688,\n    lat: 45.368,\n    fullName: '哈尔滨市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  齐齐: {\n    lng: 124.541,\n    lat: 47.5818,\n    fullName: '齐齐哈尔市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  牡丹: {\n    lng: 129.7815,\n    lat: 44.7089,\n    fullName: '牡丹江市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  绥化: {\n    lng: 126.7163,\n    lat: 46.8018,\n    fullName: '绥化市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  伊春: {\n    lng: 129.1992,\n    lat: 47.9608,\n    fullName: '伊春市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  佳木: {\n    lng: 133.0005,\n    lat: 47.5763,\n    fullName: '佳木斯市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  鸡西: {\n    lng: 132.7917,\n    lat: 45.7361,\n    fullName: '鸡西市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  双鸭: {\n    lng: 133.5938,\n    lat: 46.7523,\n    fullName: '双鸭山市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  大庆: {\n    lng: 124.7717,\n    lat: 46.4282,\n    fullName: '大庆市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  鹤岗: {\n    lng: 130.4407,\n    lat: 47.7081,\n    fullName: '鹤岗市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  七台: {\n    lng: 131.2756,\n    lat: 45.9558,\n    fullName: '七台河市',\n    province: '黑龙江',\n    countryCode: 'CN'\n  },\n  酒泉: {\n    lng: 96.2622,\n    lat: 40.4517,\n    fullName: '酒泉市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  张掖: {\n    lng: 99.7998,\n    lat: 38.7433,\n    fullName: '张掖市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  甘南: {\n    lng: 102.9199,\n    lat: 34.6893,\n    fullName: '甘南藏族自治州',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  武威: {\n    lng: 103.0188,\n    lat: 38.1061,\n    fullName: '武威市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  陇南: {\n    lng: 105.304,\n    lat: 33.5632,\n    fullName: '陇南市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  庆阳: {\n    lng: 107.5342,\n    lat: 36.2,\n    fullName: '庆阳市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  白银: {\n    lng: 104.8645,\n    lat: 36.5076,\n    fullName: '白银市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  定西: {\n    lng: 104.5569,\n    lat: 35.0848,\n    fullName: '定西市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  天水: {\n    lng: 105.6445,\n    lat: 34.6289,\n    fullName: '天水市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  兰州: {\n    lng: 103.5901,\n    lat: 36.3043,\n    fullName: '兰州市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  平凉: {\n    lng: 107.0728,\n    lat: 35.321,\n    fullName: '平凉市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  临夏: {\n    lng: 103.2715,\n    lat: 35.5737,\n    fullName: '临夏回族自治州',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  金昌: {\n    lng: 102.074,\n    lat: 38.5126,\n    fullName: '金昌市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  嘉峪: {\n    lng: 98.1738,\n    lat: 39.8035,\n    fullName: '嘉峪关市',\n    province: '甘肃',\n    countryCode: 'CN'\n  },\n  普洱: {\n    lng: 100.7446,\n    lat: 23.4229,\n    fullName: '普洱市',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  红河: {\n    lng: 103.0408,\n    lat: 23.6041,\n    fullName: '红河哈尼族彝族自治州',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  文山: {\n    lng: 104.8865,\n    lat: 23.5712,\n    fullName: '文山壮族苗族自治州',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  曲靖: {\n    lng: 103.9417,\n    lat: 25.7025,\n    fullName: '曲靖市',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  楚雄: {\n    lng: 101.6016,\n    lat: 25.3619,\n    fullName: '楚雄彝族自治州',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  大理: {\n    lng: 99.9536,\n    lat: 25.6805,\n    fullName: '大理白族自治州',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  临沧: {\n    lng: 99.613,\n    lat: 24.0546,\n    fullName: '临沧市',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  迪庆: {\n    lng: 99.4592,\n    lat: 27.9327,\n    fullName: '迪庆藏族自治州',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  昭通: {\n    lng: 104.0955,\n    lat: 27.6031,\n    fullName: '昭通市',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  昆明: {\n    lng: 102.9199,\n    lat: 25.4663,\n    fullName: '昆明市',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  丽江: {\n    lng: 100.448,\n    lat: 26.955,\n    fullName: '丽江市',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  西双: {\n    lng: 100.8984,\n    lat: 21.8628,\n    fullName: '西双版纳傣族自治州',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  保山: {\n    lng: 99.0637,\n    lat: 24.9884,\n    fullName: '保山市',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  玉溪: {\n    lng: 101.9312,\n    lat: 23.8898,\n    fullName: '玉溪市',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  怒江: {\n    lng: 99.1516,\n    lat: 26.5594,\n    fullName: '怒江傈僳族自治州',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  德宏: {\n    lng: 98.1299,\n    lat: 24.5874,\n    fullName: '德宏傣族景颇族自治州',\n    province: '云南',\n    countryCode: 'CN'\n  },\n  百色: {\n    lng: 106.6003,\n    lat: 23.9227,\n    fullName: '百色市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  河池: {\n    lng: 107.8638,\n    lat: 24.5819,\n    fullName: '河池市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  桂林: {\n    lng: 110.5554,\n    lat: 25.318,\n    fullName: '桂林市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  南宁: {\n    lng: 108.479,\n    lat: 23.1152,\n    fullName: '南宁市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  柳州: {\n    lng: 109.3799,\n    lat: 24.9774,\n    fullName: '柳州市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  崇左: {\n    lng: 107.3364,\n    lat: 22.4725,\n    fullName: '崇左市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  来宾: {\n    lng: 109.7095,\n    lat: 23.8403,\n    fullName: '来宾市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  玉林: {\n    lng: 110.2148,\n    lat: 22.3792,\n    fullName: '玉林市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  梧州: {\n    lng: 110.9949,\n    lat: 23.5052,\n    fullName: '梧州市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  贺州: {\n    lng: 111.3135,\n    lat: 24.4006,\n    fullName: '贺州市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  钦州: {\n    lng: 109.0283,\n    lat: 22.0935,\n    fullName: '钦州市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  贵港: {\n    lng: 109.9402,\n    lat: 23.3459,\n    fullName: '贵港市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  防城: {\n    lng: 108.0505,\n    lat: 21.9287,\n    fullName: '防城港市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  北海: {\n    lng: 109.314,\n    lat: 21.6211,\n    fullName: '北海市',\n    province: '广西',\n    countryCode: 'CN'\n  },\n  怀化: {\n    lng: 109.9512,\n    lat: 27.4438,\n    fullName: '怀化市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  永州: {\n    lng: 111.709,\n    lat: 25.752,\n    fullName: '永州市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  邵阳: {\n    lng: 110.9619,\n    lat: 26.8121,\n    fullName: '邵阳市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  郴州: {\n    lng: 113.2361,\n    lat: 25.8673,\n    fullName: '郴州市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  常德: {\n    lng: 111.4014,\n    lat: 29.2676,\n    fullName: '常德市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  湘西: {\n    lng: 109.7864,\n    lat: 28.6743,\n    fullName: '湘西土家族苗族自治州',\n    countryCode: 'CN'\n  },\n  衡阳: {\n    lng: 112.4121,\n    lat: 26.7902,\n    fullName: '衡阳市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  岳阳: {\n    lng: 113.2361,\n    lat: 29.1357,\n    fullName: '岳阳市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  益阳: {\n    lng: 111.731,\n    lat: 28.3832,\n    fullName: '益阳市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  长沙: {\n    lng: 113.0823,\n    lat: 28.2568,\n    fullName: '长沙市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  株洲: {\n    lng: 113.5327,\n    lat: 27.0319,\n    fullName: '株洲市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  张家界: {\n    lng: 110.5115,\n    lat: 29.328,\n    fullName: '张家界市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  娄底: {\n    lng: 111.6431,\n    lat: 27.7185,\n    fullName: '娄底市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  湘潭: {\n    lng: 112.5439,\n    lat: 27.7075,\n    fullName: '湘潭市',\n    province: '湖南',\n    countryCode: 'CN'\n  },\n  榆林: {\n    lng: 109.8743,\n    lat: 38.205,\n    fullName: '榆林市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  延安: {\n    lng: 109.1052,\n    lat: 36.4252,\n    fullName: '延安市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  汉中: {\n    lng: 106.886,\n    lat: 33.0139,\n    fullName: '汉中市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  安康: {\n    lng: 109.1162,\n    lat: 32.7722,\n    fullName: '安康市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  商洛: {\n    lng: 109.8083,\n    lat: 33.761,\n    fullName: '商洛市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  宝鸡: {\n    lng: 107.1826,\n    lat: 34.3433,\n    fullName: '宝鸡市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  渭南: {\n    lng: 109.7864,\n    lat: 35.0299,\n    fullName: '渭南市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  咸阳: {\n    lng: 108.4131,\n    lat: 34.8706,\n    fullName: '咸阳市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  西安: {\n    lng: 109.1162,\n    lat: 34.2004,\n    fullName: '西安市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  铜川: {\n    lng: 109.0393,\n    lat: 35.1947,\n    fullName: '铜川市',\n    province: '陕西',\n    countryCode: 'CN'\n  },\n  清远: {\n    lng: 112.9175,\n    lat: 24.3292,\n    fullName: '清远市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  韶关: {\n    lng: 113.7964,\n    lat: 24.7028,\n    fullName: '韶关市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  湛江: {\n    lng: 110.3577,\n    lat: 20.9894,\n    fullName: '湛江市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  梅州: {\n    lng: 116.1255,\n    lat: 24.1534,\n    fullName: '梅州市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  河源: {\n    lng: 114.917,\n    lat: 23.9722,\n    fullName: '河源市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  肇庆: {\n    lng: 112.1265,\n    lat: 23.5822,\n    fullName: '肇庆市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  惠州: {\n    lng: 114.6204,\n    lat: 23.1647,\n    fullName: '惠州市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  茂名: {\n    lng: 111.0059,\n    lat: 22.0221,\n    fullName: '茂名市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  江门: {\n    lng: 112.6318,\n    lat: 22.1484,\n    fullName: '江门市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  阳江: {\n    lng: 111.8298,\n    lat: 22.0715,\n    fullName: '阳江市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  云浮: {\n    lng: 111.7859,\n    lat: 22.8516,\n    fullName: '云浮市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  广州: {\n    lng: 113.5107,\n    lat: 23.2196,\n    fullName: '广州市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  汕尾: {\n    lng: 115.5762,\n    lat: 23.0438,\n    fullName: '汕尾市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  揭阳: {\n    lng: 116.1255,\n    lat: 23.313,\n    fullName: '揭阳市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  珠海: {\n    lng: 113.7305,\n    lat: 22.1155,\n    fullName: '珠海市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  佛山: {\n    lng: 112.8955,\n    lat: 23.1097,\n    fullName: '佛山市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  潮州: {\n    lng: 116.7847,\n    lat: 23.8293,\n    fullName: '潮州市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  汕头: {\n    lng: 117.1692,\n    lat: 23.3405,\n    fullName: '汕头市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  深圳: {\n    lng: 114.5435,\n    lat: 22.5439,\n    fullName: '深圳市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  东莞: {\n    lng: 113.8953,\n    lat: 22.901,\n    fullName: '东莞市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  中山: {\n    lng: 113.4229,\n    lat: 22.478,\n    fullName: '中山市',\n    province: '广东',\n    countryCode: 'CN'\n  },\n  延边: {\n    lng: 129.397,\n    lat: 43.2587,\n    fullName: '延边朝鲜族自治州',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  吉林: {\n    lng: 126.8372,\n    lat: 43.6047,\n    fullName: '吉林市',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  白城: {\n    lng: 123.0029,\n    lat: 45.2637,\n    fullName: '白城市',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  松原: {\n    lng: 124.0906,\n    lat: 44.7198,\n    fullName: '松原市',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  长春: {\n    lng: 125.8154,\n    lat: 44.2584,\n    fullName: '长春市',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  白山: {\n    lng: 127.2217,\n    lat: 42.0941,\n    fullName: '白山市',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  通化: {\n    lng: 125.9583,\n    lat: 41.8579,\n    fullName: '通化市',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  四平: {\n    lng: 124.541,\n    lat: 43.4894,\n    fullName: '四平市',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  辽源: {\n    lng: 125.343,\n    lat: 42.7643,\n    fullName: '辽源市',\n    province: '吉林',\n    countryCode: 'CN'\n  },\n  承德: {\n    lng: 117.5757,\n    lat: 41.4075,\n    fullName: '承德市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  张家口: {\n    lng: 115.1477,\n    lat: 40.8527,\n    fullName: '张家口市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  保定: {\n    lng: 115.0488,\n    lat: 39.0948,\n    fullName: '保定市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  唐山: {\n    lng: 118.4766,\n    lat: 39.6826,\n    fullName: '唐山市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  沧州: {\n    lng: 116.8286,\n    lat: 38.2104,\n    fullName: '沧州市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  石家: {\n    lng: 114.4995,\n    lat: 38.1006,\n    fullName: '石家庄市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  邢台: {\n    lng: 114.8071,\n    lat: 37.2821,\n    fullName: '邢台市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  邯郸: {\n    lng: 114.4775,\n    lat: 36.535,\n    fullName: '邯郸市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  秦皇: {\n    lng: 119.2126,\n    lat: 40.0232,\n    fullName: '秦皇岛市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  衡水: {\n    lng: 115.8838,\n    lat: 37.7161,\n    fullName: '衡水市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  廊坊: {\n    lng: 116.521,\n    lat: 39.0509,\n    fullName: '廊坊市',\n    province: '河北',\n    countryCode: 'CN'\n  },\n  恩施: {\n    lng: 109.5007,\n    lat: 30.2563,\n    fullName: '恩施土家族苗族自治州',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  十堰: {\n    lng: 110.5115,\n    lat: 32.3877,\n    fullName: '十堰市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  宜昌: {\n    lng: 111.1707,\n    lat: 30.7617,\n    fullName: '宜昌市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  襄樊: {\n    lng: 111.9397,\n    lat: 31.9263,\n    fullName: '襄樊市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  黄冈: {\n    lng: 115.2686,\n    lat: 30.6628,\n    fullName: '黄冈市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  荆州: {\n    lng: 113.291,\n    lat: 30.0092,\n    fullName: '荆州市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  荆门: {\n    lng: 112.6758,\n    lat: 30.9979,\n    fullName: '荆门市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  咸宁: {\n    lng: 114.2578,\n    lat: 29.6631,\n    fullName: '咸宁市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  随州: {\n    lng: 113.4338,\n    lat: 31.8768,\n    fullName: '随州市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  孝感: {\n    lng: 113.9502,\n    lat: 31.1188,\n    fullName: '孝感市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  武汉: {\n    lng: 114.3896,\n    lat: 30.6628,\n    fullName: '武汉市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  黄石: {\n    lng: 115.0159,\n    lat: 29.9213,\n    fullName: '黄石市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  神农: {\n    lng: 110.4565,\n    lat: 31.5802,\n    fullName: '神农架林区',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  天门: {\n    lng: 113.0273,\n    lat: 30.6409,\n    fullName: '天门市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  仙桃: {\n    lng: 113.3789,\n    lat: 30.3003,\n    fullName: '仙桃市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  潜江: {\n    lng: 112.7637,\n    lat: 30.3607,\n    fullName: '潜江市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  鄂州: {\n    lng: 114.7302,\n    lat: 30.4102,\n    fullName: '鄂州市',\n    province: '湖北',\n    countryCode: 'CN'\n  },\n  遵义: {\n    lng: 106.908,\n    lat: 28.1744,\n    fullName: '遵义市',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  黔东: {\n    lng: 108.4241,\n    lat: 26.4166,\n    fullName: '黔东南苗族侗族自治州',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  毕节: {\n    lng: 105.1611,\n    lat: 27.0648,\n    fullName: '毕节地区',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  黔南: {\n    lng: 107.2485,\n    lat: 25.8398,\n    fullName: '黔南布依族苗族自治州',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  铜仁: {\n    lng: 108.6218,\n    lat: 28.0096,\n    fullName: '铜仁地区',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  黔西: {\n    lng: 105.5347,\n    lat: 25.3949,\n    fullName: '黔西南布依族苗族自治州',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  六盘: {\n    lng: 104.7546,\n    lat: 26.0925,\n    fullName: '六盘水市',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  安顺: {\n    lng: 105.9082,\n    lat: 25.9882,\n    fullName: '安顺市',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  贵阳: {\n    lng: 106.6992,\n    lat: 26.7682,\n    fullName: '贵阳市',\n    province: '贵州',\n    countryCode: 'CN'\n  },\n  烟台: {\n    lng: 120.7397,\n    lat: 37.5128,\n    fullName: '烟台市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  临沂: {\n    lng: 118.3118,\n    lat: 35.2936,\n    fullName: '临沂市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  潍坊: {\n    lng: 119.0918,\n    lat: 36.524,\n    fullName: '潍坊市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  青岛: {\n    lng: 120.4651,\n    lat: 36.3373,\n    fullName: '青岛市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  菏泽: {\n    lng: 115.6201,\n    lat: 35.2057,\n    fullName: '菏泽市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  济宁: {\n    lng: 116.8286,\n    lat: 35.3375,\n    fullName: '济宁市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  德州: {\n    lng: 116.6858,\n    lat: 37.2107,\n    fullName: '德州市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  滨州: {\n    lng: 117.8174,\n    lat: 37.4963,\n    fullName: '滨州市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  聊城: {\n    lng: 115.9167,\n    lat: 36.4032,\n    fullName: '聊城市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  东营: {\n    lng: 118.7073,\n    lat: 37.5513,\n    fullName: '东营市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  济南: {\n    lng: 117.1582,\n    lat: 36.8701,\n    fullName: '济南市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  泰安: {\n    lng: 117.0264,\n    lat: 36.0516,\n    fullName: '泰安市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  威海: {\n    lng: 121.9482,\n    lat: 37.1393,\n    fullName: '威海市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  日照: {\n    lng: 119.2786,\n    lat: 35.5023,\n    fullName: '日照市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  淄博: {\n    lng: 118.0371,\n    lat: 36.6064,\n    fullName: '淄博市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  枣庄: {\n    lng: 117.323,\n    lat: 34.8926,\n    fullName: '枣庄市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  莱芜: {\n    lng: 117.6526,\n    lat: 36.2714,\n    fullName: '莱芜市',\n    province: '山东',\n    countryCode: 'CN'\n  },\n  赣州: {\n    lng: 115.2795,\n    lat: 25.8124,\n    fullName: '赣州市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  吉安: {\n    lng: 114.884,\n    lat: 26.9659,\n    fullName: '吉安市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  上饶: {\n    lng: 117.8613,\n    lat: 28.7292,\n    fullName: '上饶市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  九江: {\n    lng: 115.4224,\n    lat: 29.3774,\n    fullName: '九江市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  抚州: {\n    lng: 116.4441,\n    lat: 27.4933,\n    fullName: '抚州市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  宜春: {\n    lng: 115.0159,\n    lat: 28.3228,\n    fullName: '宜春市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  南昌: {\n    lng: 116.0046,\n    lat: 28.6633,\n    fullName: '南昌市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  景德: {\n    lng: 117.334,\n    lat: 29.3225,\n    fullName: '景德镇市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  萍乡: {\n    lng: 113.9282,\n    lat: 27.4823,\n    fullName: '萍乡市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  鹰潭: {\n    lng: 117.0813,\n    lat: 28.2349,\n    fullName: '鹰潭市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  新余: {\n    lng: 114.95,\n    lat: 27.8174,\n    fullName: '新余市',\n    province: '江西',\n    countryCode: 'CN'\n  },\n  南阳: {\n    lng: 112.4011,\n    lat: 33.0359,\n    fullName: '南阳市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  信阳: {\n    lng: 114.8291,\n    lat: 32.0197,\n    fullName: '信阳市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  洛阳: {\n    lng: 112.0605,\n    lat: 34.3158,\n    fullName: '洛阳市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  驻马: {\n    lng: 114.1589,\n    lat: 32.9041,\n    fullName: '驻马店市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  周口: {\n    lng: 114.873,\n    lat: 33.6951,\n    fullName: '周口市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  商丘: {\n    lng: 115.741,\n    lat: 34.2828,\n    fullName: '商丘市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  三门: {\n    lng: 110.8301,\n    lat: 34.3158,\n    fullName: '三门峡市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  新乡: {\n    lng: 114.2029,\n    lat: 35.3595,\n    fullName: '新乡市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  平顶: {\n    lng: 112.9724,\n    lat: 33.739,\n    fullName: '平顶山市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  郑州: {\n    lng: 113.4668,\n    lat: 34.6234,\n    fullName: '郑州市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  安阳: {\n    lng: 114.5325,\n    lat: 36.0022,\n    fullName: '安阳市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  开封: {\n    lng: 114.5764,\n    lat: 34.6124,\n    fullName: '开封市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  焦作: {\n    lng: 112.8406,\n    lat: 35.1508,\n    fullName: '焦作市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  许昌: {\n    lng: 113.6975,\n    lat: 34.0466,\n    fullName: '许昌市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  濮阳: {\n    lng: 115.1917,\n    lat: 35.799,\n    fullName: '濮阳市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  漯河: {\n    lng: 113.8733,\n    lat: 33.6951,\n    fullName: '漯河市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  鹤壁: {\n    lng: 114.3787,\n    lat: 35.744,\n    fullName: '鹤壁市',\n    province: '河南',\n    countryCode: 'CN'\n  },\n  大连: {\n    lng: 122.2229,\n    lat: 39.4409,\n    fullName: '大连市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  朝阳: {\n    lng: 120.0696,\n    lat: 41.4899,\n    fullName: '朝阳市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  丹东: {\n    lng: 124.541,\n    lat: 40.4242,\n    fullName: '丹东市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  铁岭: {\n    lng: 124.2773,\n    lat: 42.7423,\n    fullName: '铁岭市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  沈阳: {\n    lng: 123.1238,\n    lat: 42.1216,\n    fullName: '沈阳市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  抚顺: {\n    lng: 124.585,\n    lat: 41.8579,\n    fullName: '抚顺市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  葫芦: {\n    lng: 120.1575,\n    lat: 40.578,\n    fullName: '葫芦岛市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  阜新: {\n    lng: 122.0032,\n    lat: 42.2699,\n    fullName: '阜新市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  锦州: {\n    lng: 121.6626,\n    lat: 41.4294,\n    fullName: '锦州市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  鞍山: {\n    lng: 123.0798,\n    lat: 40.6055,\n    fullName: '鞍山市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  本溪: {\n    lng: 124.1455,\n    lat: 41.1987,\n    fullName: '本溪市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  营口: {\n    lng: 122.4316,\n    lat: 40.4297,\n    fullName: '营口市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  辽阳: {\n    lng: 123.4094,\n    lat: 41.1383,\n    fullName: '辽阳市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  盘锦: {\n    lng: 121.9482,\n    lat: 41.0449,\n    fullName: '盘锦市',\n    province: '辽宁',\n    countryCode: 'CN'\n  },\n  忻州: {\n    lng: 112.4561,\n    lat: 38.8971,\n    fullName: '忻州市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  吕梁: {\n    lng: 111.3574,\n    lat: 37.7325,\n    fullName: '吕梁市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  临汾: {\n    lng: 111.4783,\n    lat: 36.1615,\n    fullName: '临汾市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  晋中: {\n    lng: 112.7747,\n    lat: 37.37,\n    fullName: '晋中市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  运城: {\n    lng: 111.1487,\n    lat: 35.2002,\n    fullName: '运城市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  大同: {\n    lng: 113.7854,\n    lat: 39.8035,\n    fullName: '大同市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  长治: {\n    lng: 112.8625,\n    lat: 36.4746,\n    fullName: '长治市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  朔州: {\n    lng: 113.0713,\n    lat: 39.6991,\n    fullName: '朔州市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  晋城: {\n    lng: 112.7856,\n    lat: 35.6342,\n    fullName: '晋城市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  太原: {\n    lng: 112.3352,\n    lat: 37.9413,\n    fullName: '太原市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  阳泉: {\n    lng: 113.4778,\n    lat: 38.0951,\n    fullName: '阳泉市',\n    province: '山西',\n    countryCode: 'CN'\n  },\n  六安: {\n    lng: 116.3123,\n    lat: 31.8329,\n    fullName: '六安市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  安庆: {\n    lng: 116.7517,\n    lat: 30.5255,\n    fullName: '安庆市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  滁州: {\n    lng: 118.1909,\n    lat: 32.536,\n    fullName: '滁州市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  宣城: {\n    lng: 118.8062,\n    lat: 30.6244,\n    fullName: '宣城市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  阜阳: {\n    lng: 115.7629,\n    lat: 32.9919,\n    fullName: '阜阳市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  宿州: {\n    lng: 117.5208,\n    lat: 33.6841,\n    fullName: '宿州市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  黄山: {\n    lng: 118.0481,\n    lat: 29.9542,\n    fullName: '黄山市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  巢湖: {\n    lng: 117.7734,\n    lat: 31.4978,\n    fullName: '巢湖市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  亳州: {\n    lng: 116.1914,\n    lat: 33.4698,\n    fullName: '亳州市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  池州: {\n    lng: 117.3889,\n    lat: 30.2014,\n    fullName: '池州市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  合肥: {\n    lng: 117.29,\n    lat: 32.0581,\n    fullName: '合肥市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  蚌埠: {\n    lng: 117.4109,\n    lat: 33.1073,\n    fullName: '蚌埠市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  芜湖: {\n    lng: 118.3557,\n    lat: 31.0858,\n    fullName: '芜湖市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  淮北: {\n    lng: 116.6968,\n    lat: 33.6896,\n    fullName: '淮北市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  淮南: {\n    lng: 116.7847,\n    lat: 32.7722,\n    fullName: '淮南市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  马鞍: {\n    lng: 118.6304,\n    lat: 31.5363,\n    fullName: '马鞍山市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  铜陵: {\n    lng: 117.9382,\n    lat: 30.9375,\n    fullName: '铜陵市',\n    province: '安徽',\n    countryCode: 'CN'\n  },\n  南平: {\n    lng: 118.136,\n    lat: 27.2845,\n    fullName: '南平市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  三明: {\n    lng: 117.5317,\n    lat: 26.3013,\n    fullName: '三明市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  龙岩: {\n    lng: 116.8066,\n    lat: 25.2026,\n    fullName: '龙岩市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  宁德: {\n    lng: 119.6521,\n    lat: 26.9824,\n    fullName: '宁德市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  福州: {\n    lng: 119.4543,\n    lat: 25.9222,\n    fullName: '福州市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  漳州: {\n    lng: 117.5757,\n    lat: 24.3732,\n    fullName: '漳州市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  泉州: {\n    lng: 118.3228,\n    lat: 25.1147,\n    fullName: '泉州市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  莆田: {\n    lng: 119.0918,\n    lat: 25.3455,\n    fullName: '莆田市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  厦门: {\n    lng: 118.1689,\n    lat: 24.6478,\n    fullName: '厦门市',\n    province: '福建',\n    countryCode: 'CN'\n  },\n  丽水: {\n    lng: 119.5642,\n    lat: 28.1854,\n    fullName: '丽水市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  杭州: {\n    lng: 119.5313,\n    lat: 29.8773,\n    fullName: '杭州市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  温州: {\n    lng: 120.498,\n    lat: 27.8119,\n    fullName: '温州市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  宁波: {\n    lng: 121.5967,\n    lat: 29.6466,\n    fullName: '宁波市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  舟山: {\n    lng: 122.2559,\n    lat: 30.2234,\n    fullName: '舟山市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  台州: {\n    lng: 121.1353,\n    lat: 28.6688,\n    fullName: '台州市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  金华: {\n    lng: 120.0037,\n    lat: 29.1028,\n    fullName: '金华市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  衢州: {\n    lng: 118.6853,\n    lat: 28.8666,\n    fullName: '衢州市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  绍兴: {\n    lng: 120.564,\n    lat: 29.7565,\n    fullName: '绍兴市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  嘉兴: {\n    lng: 120.9155,\n    lat: 30.6354,\n    fullName: '嘉兴市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  湖州: {\n    lng: 119.8608,\n    lat: 30.7782,\n    fullName: '湖州市',\n    province: '浙江',\n    countryCode: 'CN'\n  },\n  盐城: {\n    lng: 120.2234,\n    lat: 33.5577,\n    fullName: '盐城市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  徐州: {\n    lng: 117.5208,\n    lat: 34.3268,\n    fullName: '徐州市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  南通: {\n    lng: 121.1023,\n    lat: 32.1625,\n    fullName: '南通市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  淮安: {\n    lng: 118.927,\n    lat: 33.4039,\n    fullName: '淮安市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  苏州: {\n    lng: 120.6519,\n    lat: 31.3989,\n    fullName: '苏州市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  宿迁: {\n    lng: 118.5535,\n    lat: 33.7775,\n    fullName: '宿迁市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  连云: {\n    lng: 119.1248,\n    lat: 34.552,\n    fullName: '连云港市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  扬州: {\n    lng: 119.4653,\n    lat: 32.8162,\n    fullName: '扬州市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  南京: {\n    lng: 118.8062,\n    lat: 31.9208,\n    fullName: '南京市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  泰州: {\n    lng: 120.0586,\n    lat: 32.5525,\n    fullName: '泰州市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  无锡: {\n    lng: 120.3442,\n    lat: 31.5527,\n    fullName: '无锡市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  常州: {\n    lng: 119.4543,\n    lat: 31.5582,\n    fullName: '常州市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  镇江: {\n    lng: 119.4763,\n    lat: 31.9702,\n    fullName: '镇江市',\n    province: '江苏',\n    countryCode: 'CN'\n  },\n  吴忠: {\n    lng: 106.853,\n    lat: 37.3755,\n    fullName: '吴忠市',\n    province: '宁夏',\n    countryCode: 'CN'\n  },\n  中卫: {\n    lng: 105.4028,\n    lat: 36.9525,\n    fullName: '中卫市',\n    province: '宁夏',\n    countryCode: 'CN'\n  },\n  固原: {\n    lng: 106.1389,\n    lat: 35.9363,\n    fullName: '固原市',\n    province: '宁夏',\n    countryCode: 'CN'\n  },\n  银川: {\n    lng: 106.3586,\n    lat: 38.1775,\n    fullName: '银川市',\n    province: '宁夏',\n    countryCode: 'CN'\n  },\n  石嘴: {\n    lng: 106.4795,\n    lat: 39.0015,\n    fullName: '石嘴山市',\n    province: '宁夏',\n    countryCode: 'CN'\n  },\n  儋州: {\n    lng: 109.3291,\n    lat: 19.5653,\n    fullName: '儋州市',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  文昌: {\n    lng: 110.8905,\n    lat: 19.7823,\n    fullName: '文昌市',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  乐东: {\n    lng: 109.0283,\n    lat: 18.6301,\n    fullName: '乐东黎族自治县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  三亚: {\n    lng: 109.3716,\n    lat: 18.3698,\n    fullName: '三亚市',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  琼中: {\n    lng: 109.8413,\n    lat: 19.0736,\n    fullName: '琼中黎族苗族自治县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  东方: {\n    lng: 108.8498,\n    lat: 19.0414,\n    fullName: '东方市',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  海口: {\n    lng: 110.3893,\n    lat: 19.8516,\n    fullName: '海口市',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  万宁: {\n    lng: 110.3137,\n    lat: 18.8388,\n    fullName: '万宁市',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  澄迈: {\n    lng: 109.9937,\n    lat: 19.7314,\n    fullName: '澄迈县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  白沙: {\n    lng: 109.3703,\n    lat: 19.211,\n    fullName: '白沙黎族自治县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  琼海: {\n    lng: 110.4208,\n    lat: 19.224,\n    fullName: '琼海市',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  昌江: {\n    lng: 109.0407,\n    lat: 19.2137,\n    fullName: '昌江黎族自治县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  临高: {\n    lng: 109.6957,\n    lat: 19.8063,\n    fullName: '临高县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  陵水: {\n    lng: 109.9924,\n    lat: 18.5415,\n    fullName: '陵水黎族自治县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  屯昌: {\n    lng: 110.0377,\n    lat: 19.362,\n    fullName: '屯昌县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  定安: {\n    lng: 110.3384,\n    lat: 19.4698,\n    fullName: '定安县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  保亭: {\n    lng: 109.6284,\n    lat: 18.6108,\n    fullName: '保亭黎族苗族自治县',\n    province: '海南',\n    countryCode: 'CN'\n  },\n  五指: {\n    lng: 109.5282,\n    lat: 18.8299,\n    fullName: '五指山市',\n    province: '海南',\n    countryCode: 'CN'\n  }\n};\n\n//# sourceURL=webpack:///./src/globe/utils/geo.js?");

/***/ }),

/***/ "./src/globe/utils/worldAxis.js":
/*!**************************************!*\
  !*** ./src/globe/utils/worldAxis.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/*********************************Start World Axes********************/\nvar showAxis = function showAxis(scene, size) {\n  var makeTextPlane = function makeTextPlane(text, color, size) {\n    var dynamicTexture = new BABYLON.DynamicTexture(\"DynamicTexture\", 50, scene, true);\n    dynamicTexture.hasAlpha = true;\n    dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color, \"transparent\", true);\n    var plane = new BABYLON.Mesh.CreatePlane(\"TextPlane\", size, scene, true);\n    plane.material = new BABYLON.StandardMaterial(\"TextPlaneMaterial\", scene);\n    plane.material.backFaceCulling = false;\n    plane.material.specularColor = new BABYLON.Color3(0, 0, 0);\n    plane.material.diffuseTexture = dynamicTexture;\n    return plane;\n  };\n\n  var axisX = BABYLON.Mesh.CreateLines(\"axisX\", [new BABYLON.Vector3.Zero(), new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, 0.05 * size, 0), new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, -0.05 * size, 0)], scene);\n  axisX.color = new BABYLON.Color3(1, 0, 0);\n  var xChar = makeTextPlane(\"X\", \"red\", size / 10);\n  xChar.position = new BABYLON.Vector3(0.9 * size, -0.05 * size, 0);\n  var axisY = BABYLON.Mesh.CreateLines(\"axisY\", [new BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3(-0.05 * size, size * 0.95, 0), new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3(0.05 * size, size * 0.95, 0)], scene);\n  axisY.color = new BABYLON.Color3(0, 1, 0);\n  var yChar = makeTextPlane(\"Y\", \"green\", size / 10);\n  yChar.position = new BABYLON.Vector3(0, 0.9 * size, -0.05 * size);\n  var axisZ = BABYLON.Mesh.CreateLines(\"axisZ\", [new BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3(0, -0.05 * size, size * 0.95), new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3(0, 0.05 * size, size * 0.95)], scene);\n  axisZ.color = new BABYLON.Color3(0, 0, 1);\n  var zChar = makeTextPlane(\"Z\", \"blue\", size / 10);\n  zChar.position = new BABYLON.Vector3(0, 0.05 * size, 0.9 * size);\n};\n/***************************End World Axes***************************/\n\nexports.default = showAxis;\n\n//# sourceURL=webpack:///./src/globe/utils/worldAxis.js?");

/***/ }),

/***/ "babylonjs":
/*!**************************!*\
  !*** external "BABYLON" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = BABYLON;\n\n//# sourceURL=webpack:///external_%22BABYLON%22?");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0RBQTBDLGdDQUFnQztBQUMxRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdFQUF3RCxrQkFBa0I7QUFDMUU7QUFDQSx5REFBaUQsY0FBYztBQUMvRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQXlDLGlDQUFpQztBQUMxRSx3SEFBZ0gsbUJBQW1CLEVBQUU7QUFDckk7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7O0FBR0E7QUFDQSIsImZpbGUiOiJnbG9iZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL2J1aWxkL1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gXCIuL3NyYy9nbG9iZS9pbmRleC50c1wiKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=